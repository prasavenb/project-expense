- name: disable nodejs
  ansible.builtin.command: "dnf module disable nodejs -y"

- name: enable nodejs
  ansible.builtin.command: "dnf module enable nodejs:20 -y"

- name: install nodejs and mysql
  ansible.builtin.package:
    name: "{{ item }}"
    state: "present"
  loop:
  - nodejs
  - mysql

- name: create  expense user
  ansible.builtin.user:
    name: expense

- name: create app directory
  ansible.builtin.file:
    path: "/app"
    state: "directory"

- name: download application code
  ansible.builtin.get_url:
    url: "https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip"
    dest: /tmp/backend.zip

- name: extarct the application code
  ansible.builtin.unarchive:
    src: /tmp/backend.zip
    dest: /app
    remote_src: yes

- name: install dependencies
  ansible.builtin.command: "npm install"
  args:
    chdir: /app
    

- name: copy the backend service
  ansible.builtin.template:
    src: "backend.service.j2"
    dest: /etc/systemd/system/backend.service

- name: install PyMySQL
  ansible.builtin.pip:
    name:
    - PyMySQL
    - cryptography
    state: "present"
    executable: pip3.9

- name: import mysql data
  community.mysql.mysql_db:
    login_password: "{{ login_password }}"
    login_host: "{{ login_host }}"
    login_user: "root"
    state: "import"
    name: "all"
    target: "/app/schema/backend.sql"

- name:  daemon reload
  ansible.builtin.systemd_service:
    state: restarted
    daemon_reload: true
    name: backend
